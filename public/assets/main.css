/* ABOUT
 * I'm new to CSS, advice welcome! I'm trying to write this CSS 
 * 'mobile-first' with the default CSS being for mobile users (navbar at
 * bottom of screen for easier navigation) and '@media' queries at the 
 * end to modify CSS for larger devices (navbar at top.) (2019-02-05) */
 
/* NOTES TO SELF
 * Use external stylesheets
 *   Don't use inline styling
 *   Don't use internal styling
 * Style using classes
 *   Don't style tags ('elements')
 *   Don't style IDs
 *    Don't use `!important`
 * Mobile first
 * Be BEMy http://getbem.com/
 *   Block     independent entity  .block          
 *   Element   dependent entity    .block__element 
 *   Modifier  entity modifier     .block--modifier
 * Margins collapse vertically
 *   Borders and padding don't.
 * 'max-width' shrinks, 'width' adds scrollbar
 * "Percent is a measurement unit relative to the containing block."
 * Initial setting for `display: flex;`
 *   flex-direction: row;
 *   flex-wrap: nowrap;
 *   justify-content: flex-start;
 *   align-content: stretch;
 * use modifier for external geometry (i.e. margin) to reuse blocks anywhere!
 * 
 * http://learnlayout.com
 * http://paulcpederson.com/articles/css-for-people-who-hate-css/
 * "Classes for styles, tags for semantics, IDs for references." https://codeburst.io/how-to-write-css-when-you-hate-css-feb5a235b7f1 
 */   
 
/* QUESTIONS
 * - can I use 'css-variables' natively with support? (e.g. `navbar-height`)
 * - global selector: * vs html vs body
 */


.nav {
  position: fixed;
  bottom: 0;
  width: 100%;
  display: flex;
  border-top: 0.25rem solid teal;
  border-bottom: 0.25rem solid teal;
  border-left: 0.25rem solid teal;
  background-color: teal;
}

@media only screen and (min-width: 530px) {
  .nav {
    top: 0;                   /* move nav to top of screen */
    bottom: initial;          /* reset to prevent nav filling screen! */
    justify-content: center;  /* IMPROVE. perhaps nicer to have aligned with content */
  }
  .desktopScrollbarBuffer {
    width: calc(100vw - 100%); /* eliminate jumping by calculating desktop scrollbar width and adding to left side */
    height: 100%;
  }
}

/* And experiment for left aligning nav
  .nav__starter {
    width: calc((100vw - 30rem - 2rem) / 2);
    flex-shrink: 0;
  }
*/

  .nav__tab /* i.e. unpressed */ { 
    font-size: 1.25rem;
    padding: 0.5rem;
    background-color: teal;
    color: whitesmoke;
    cursor: pointer;
    font-family: 'FiraSans', Sans;
    text-decoration: none;
  }

  @media only screen and (min-width: 530px) {
    .nav__tab:hover, .nav__tab:active, .nav__tab--current  {
    background-image: linear-gradient(teal, whitesmoke 10%, whitesmoke 90%, teal);
    color: darkslategray;
    }
  }

  /* scrolling tab container */
  .nav__tabShuttle {
    display: flex; 
    overflow: auto; /* add scrollbar if content exceeds container */
  }

  /* fade effect to right of nav to hint options if scrolled  */
  .nav__fader {
    position: absolute; /* fixed position relative to last positioned ancestor (.nav) Layered above tabs/spacers */
    right: 0;
    bottom: 0;
    height: 100%;
    width: 1.5rem;
    background-image: linear-gradient(to left, teal, transparent);
  }

  /* 'empty tab' gives definite end to the 'fader' to assure users they're not missing options */
  .nav__ender {
    width: 1.5rem;
    flex-shrink: 0;
  }
  
.contentFrame {
  margin: auto;
  margin-bottom: 3rem;
  padding: 1rem;
  width: 100%;
}

@media only screen and (min-width: 530px) {
  .contentFrame {
    margin-bottom: initial;
    margin-top: 3rem;
  }
}
  
.image {
  display: block;
  margin: auto;
  max-width: 50%;
}

  .image--profilePic {
    width: 50%;
    max-width: 12.5rem;
    border-radius: 50%;
    border: 5px solid teal;
  }
  
.icon, .svg-inline--fa {
  height: 2rem;
  fill: darkslategray;
}

  .icon--tech {
    height: 1rem;
  }

.entryBox {
  border-radius: 10px;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  padding: 15px;
}

  .entryBox--posts {
    margin: 0px 0 30px 0;
  }  

  .entryBox__title {
    font-size: 1.5rem;
    font-weight: bold;
    margin: 0px 0px 10px 0px;
  }

  .entryBox__subtitle {
    font-size: 1.1rem;
    font-weight: lighter;
    font-family: 'FiraSans', Sans;
    margin: 0;
  }

